<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Plano de Projeto: Integra√ß√£o Recruta.AI & Senior</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <!-- Chosen Palette: Warm Neutrals -->
    <!-- Application Structure Plan: A aplica√ß√£o est√° estruturada como um painel de projeto interativo, em vez de um documento linear. Utiliza uma navega√ß√£o superior para acesso r√°pido √†s se√ß√µes principais: Vis√£o Geral, Cronograma interativo, Recursos e Documenta√ß√£o. O n√∫cleo da aplica√ß√£o √© o gr√°fico de cronograma interativo estilo Gantt, que representa visualmente as fases do projeto e sua dura√ß√£o em sprints. Clicar em uma fase no gr√°fico exibe dinamicamente suas tarefas e entregas detalhadas abaixo. Essa estrutura foi escolhida para fornecer um resumo visual de alto n√≠vel, permitindo que os usu√°rios explorem os detalhes sob demanda, o que √© mais envolvente e menos sobrecarregado do que uma p√°gina de texto longa e est√°tica. Transforma um plano de projeto de uma experi√™ncia de leitura passiva em uma ferramenta de explora√ß√£o ativa. -->
    <!-- Visualization & Content Choices: 
    - Cronograma do Projeto: Informa√ß√£o do Relat√≥rio -> Fases do projeto e dura√ß√µes em sprints. Objetivo -> Mostrar mudan√ßa/progress√£o ao longo do tempo. Visualiza√ß√£o/M√©todo -> Gr√°fico de Barras Horizontais (estilo Gantt). Intera√ß√£o -> Clicar na barra de uma fase para revelar detalhes. Justificativa -> Um gr√°fico de Gantt √© a forma mais intuitiva de visualizar um cronograma de projeto. A intera√ß√£o permite a divulga√ß√£o progressiva de informa√ß√µes, melhorando a usabilidade. Biblioteca -> Chart.js (Canvas).
    - Detalhes da Fase (Tarefas, Entregas): Informa√ß√£o do Relat√≥rio -> Detalhamento de cada fase do projeto. Objetivo -> Organizar e Informar. Visualiza√ß√£o/M√©todo -> Cart√µes HTML gerados dinamicamente. Intera√ß√£o -> O conte√∫do aparece/atualiza com base na sele√ß√£o do gr√°fico. Justificativa -> Os cart√µes fornecem uma maneira estruturada e visualmente atraente de apresentar informa√ß√µes detalhadas, e o carregamento din√¢mico mant√©m a interface limpa. Biblioteca/M√©todo -> Vanilla JS, HTML, Tailwind CSS.
    - Recursos & Documenta√ß√£o: Informa√ß√£o do Relat√≥rio -> Listas de membros da equipe, sistemas e links de API. Objetivo -> Informar. Visualiza√ß√£o/M√©todo -> Listas e cart√µes HTML estilizados. Intera√ß√£o -> Hiperlinks padr√£o. Justificativa -> Este √© um material de refer√™ncia, melhor apresentado em um formato claro e de f√°cil leitura. Biblioteca/M√©todo -> HTML, Tailwind CSS.
    -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8f7f4;
            color: #333;
        }
        .nav-link {
            transition: color 0.3s, border-bottom-color 0.3s;
        }
        .nav-link:hover {
            color: #c084fc;
        }
        .nav-link.active {
            color: #a855f7;
            border-bottom: 2px solid #a855f7;
        }
        .phase-card {
            background-color: white;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
            transition: transform 0.3s, box-shadow 0.3s;
        }
        .phase-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
        }
        .chart-container {
            position: relative;
            width: 100%;
            max-width: 1024px;
            margin-left: auto;
            margin-right: auto;
            height: 300px;
            max-height: 400px;
        }
        @media (min-width: 768px) {
            .chart-container {
                height: 400px;
            }
        }
        .section-title {
            color: #868075;
            font-weight: 600;
            letter-spacing: 0.05em;
        }
    </style>
</head>
<body class="antialiased">

    <header class="bg-white/80 backdrop-blur-lg sticky top-0 z-50 shadow-sm">
        <nav class="container mx-auto px-6 py-4 flex justify-between items-center">
            <h1 class="text-2xl font-bold text-purple-600">Integra√ß√£o Recruta.AI + Senior</h1>
            <div class="hidden md:flex space-x-8">
                <a href="#overview" class="nav-link text-gray-600 font-medium pb-1">Vis√£o Geral</a>
                <a href="#timeline" class="nav-link text-gray-600 font-medium pb-1">Cronograma</a>
                <a href="#resources" class="nav-link text-gray-600 font-medium pb-1">Recursos</a>
                <a href="#docs" class="nav-link text-gray-600 font-medium pb-1">Documenta√ß√£o</a>
            </div>
        </nav>
    </header>

    <main class="container mx-auto px-6 py-12">

        <section id="overview" class="mb-20 text-center">
            <h2 class="text-4xl font-bold text-gray-800 mb-4">Vis√£o Geral do Projeto</h2>
            <p class="max-w-3xl mx-auto text-lg text-gray-600">
                O objetivo principal deste projeto √© integrar as plataformas Recruta.AI e Senior Sistemas para automatizar o processo de admiss√£o de novos colaboradores, reduzindo a duplica√ß√£o de dados e agilizando as contrata√ß√µes. A automa√ß√£o visa otimizar o fluxo de trabalho do RH, garantindo maior efici√™ncia e precis√£o das informa√ß√µes.
            </p>
        </section>

        <section id="timeline" class="mb-20">
            <div class="text-center mb-12">
                <h2 class="text-4xl font-bold text-gray-800 mb-2">Cronograma Interativo</h2>
                <p class="text-lg text-gray-600">Clique em uma fase no gr√°fico para ver seus detalhes.</p>
            </div>
            <div class="bg-white p-4 sm:p-6 rounded-xl shadow-lg">
                <div class="chart-container">
                    <canvas id="timelineChart"></canvas>
                </div>
            </div>
            
            <div id="phase-details" class="mt-12"></div>
        </section>

        <section id="resources" class="mb-20">
            <div class="text-center mb-12">
                <h2 class="text-4xl font-bold text-gray-800 mb-2">Recursos Necess√°rios</h2>
                <p class="text-lg text-gray-600">Equipe, sistemas e documenta√ß√£o essenciais para o sucesso do projeto.</p>
            </div>
            <div class="grid md:grid-cols-3 gap-8">
                <div class="phase-card p-6">
                    <h3 class="text-xl font-bold text-purple-600 mb-3">üë§ Equipe</h3>
                    <ul class="space-y-2 text-gray-700 list-disc list-inside">
                        <li>Gerente de Projeto</li>
                        <li>Especialista de RH/R&S</li>
                        <li>Analista de TI</li>
                        <li>Suporte t√©cnico da Senior</li>
                        <li>Suporte t√©cnico da Recruta.AI</li>
                    </ul>
                </div>
                <div class="phase-card p-6">
                    <h3 class="text-xl font-bold text-purple-600 mb-3">üíª Sistemas</h3>
                     <ul class="space-y-2 text-gray-700 list-disc list-inside">
                        <li>Acesso √† plataforma Recruta.AI</li>
                        <li>Acesso ao sistema Senior</li>
                        <li>Permiss√µes de API em ambos</li>
                    </ul>
                </div>
                <div class="phase-card p-6">
                    <h3 class="text-xl font-bold text-purple-600 mb-3">üìö Documenta√ß√£o</h3>
                     <ul class="space-y-2 text-gray-700 list-disc list-inside">
                        <li>Manuais de API da Senior</li>
                        <li>Documenta√ß√£o de integra√ß√£o da Recruta.AI</li>
                    </ul>
                </div>
            </div>
        </section>

        <section id="docs">
            <div class="text-center mb-12">
                <h2 class="text-4xl font-bold text-gray-800 mb-2">Documenta√ß√£o T√©cnica</h2>
                <p class="text-lg text-gray-600">Links √∫teis para a equipe de desenvolvimento e TI.</p>
            </div>
            <div class="bg-white rounded-xl shadow-lg p-8 space-y-6">
                <div>
                    <h3 class="text-xl font-semibold text-gray-800">Documenta√ß√£o de APIs da Senior</h3>
                    <p class="text-gray-600 mt-1">Recursos essenciais para a equipe t√©cnica iniciar o processo de integra√ß√£o, detalhando servi√ßos, fluxos de autentica√ß√£o e dados necess√°rios.</p>
                    <div class="mt-4 grid sm:grid-cols-1 md:grid-cols-3 gap-4">
                        <a href="https://documentacao.senior.com.br/" target="_blank" class="block p-4 bg-purple-50 hover:bg-purple-100 rounded-lg transition-colors">
                            <p class="font-semibold text-purple-700">Portal de Documenta√ß√£o Senior</p>
                            <p class="text-sm text-purple-600">Documenta√ß√£o geral.</p>
                        </a>
                        <a href="https://dev.senior.com.br/apis_publicas/" target="_blank" class="block p-4 bg-purple-50 hover:bg-purple-100 rounded-lg transition-colors">
                            <p class="font-semibold text-purple-700">Portal de APIs Senior X</p>
                            <p class="text-sm text-purple-600">Portal espec√≠fico para APIs.</p>
                        </a>
                        <a href="https://documentacao.senior.com.br/seniorxplatform/manual-do-usuario/hcm/admissao-digital/integracoes/integracao-via-api.htm" target="_blank" class="block p-4 bg-purple-50 hover:bg-purple-100 rounded-lg transition-colors">
                            <p class="font-semibold text-purple-700">API de Admiss√£o Digital</p>
                            <p class="text-sm text-purple-600">Detalhes da API espec√≠fica.</p>
                        </a>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <footer class="bg-gray-800 text-white mt-20">
        <div class="container mx-auto px-6 py-4 text-center">
            <p>&copy; 2025 Painel de Projeto Interativo. Todos os direitos reservados.</p>
        </div>
    </footer>

    <script>
        const projectData = [
            {
                phase: 'Fase 1: Planejamento e Descoberta',
                sprints: [1, 2],
                objective: 'Alinhar expectativas, mapear processos e definir o escopo do projeto.',
                details: [
                    { title: 'Reuni√£o de Kick-off', content: 'Participantes: L√≠deres de RH, TI, R&S, e representantes da Senior e Recruta.AI. Pauta: Apresenta√ß√£o do projeto, defini√ß√£o de pap√©is e responsabilidades, e alinhamento do cronograma.' },
                    { title: 'Mapeamento de Processos', content: 'Documentar o processo atual de Recrutamento e Sele√ß√£o e Admiss√£o. Identificar os campos de dados que precisam ser transferidos (ex: nome, CPF, etc.).' },
                    { title: 'An√°lise de Viabilidade T√©cnica', content: 'A equipe de TI valida os pr√©-requisitos, como permiss√µes de API no Senior e acesso √† plataforma Recruta.AI.' }
                ],
                deliverable: 'Documento de mapeamento de campos e valida√ß√£o t√©cnica.'
            },
            {
                phase: 'Fase 2: Configura√ß√£o e Desenvolvimento',
                sprints: [3, 5],
                objective: 'Configurar as plataformas e habilitar a integra√ß√£o.',
                details: [
                    { title: 'Configura√ß√£o no Recruta.AI', content: 'Acessar o painel de integra√ß√µes e inserir as credenciais de acesso ao sistema Senior.' },
                    { title: 'Configura√ß√£o no Senior', content: 'A equipe de TI, com o suporte da Senior, habilita as APIs necess√°rias no ambiente da empresa e garante que o m√≥dulo de Admiss√£o Digital esteja ativo.' },
                    { title: 'Desenvolvimento (Opcional)', content: 'Se houver campos customizados, a equipe de desenvolvimento cria as regras de neg√≥cio para a transfer√™ncia de dados via API.' }
                ],
                deliverable: 'Integra√ß√£o ativada e pronta para testes.'
            },
            {
                phase: 'Fase 3: Testes e Valida√ß√£o',
                sprints: [6, 7],
                objective: 'Garantir que a integra√ß√£o funcione perfeitamente e sem erros.',
                details: [
                    { title: 'Testes de Integra√ß√£o', content: 'Realizar testes de ponta a ponta em um ambiente de homologa√ß√£o, simulando um processo de sele√ß√£o completo.' },
                    { title: 'Teste de Massa', content: 'Realizar a transfer√™ncia de dados de m√∫ltiplos candidatos para garantir que o processo seja escal√°vel e sem perda de informa√ß√£o.' },
                    { title: 'Treinamento da Equipe', content: 'Treinar a equipe de R&S e o Departamento Pessoal sobre o novo fluxo.' }
                ],
                deliverable: 'Relat√≥rio de testes com aprova√ß√£o das equipes de RH e TI.'
            },
            {
                phase: 'Fase 4: Go-Live e P√≥s-Implementa√ß√£o',
                sprints: [8, 9],
                objective: 'Colocar a integra√ß√£o em produ√ß√£o e monitorar o desempenho.',
                details: [
                    { title: 'Go-Live (Entrada em Produ√ß√£o)', content: 'Habilitar a integra√ß√£o no ambiente de produ√ß√£o e comunicar o novo processo a toda a equipe de RH.' },
                    { title: 'Monitoramento e Suporte', content: 'A equipe de TI monitora o fluxo de dados para identificar e corrigir poss√≠veis erros. Estabelecer canal de comunica√ß√£o com suporte t√©cnico.' },
                    { title: 'Feedback e Melhoria Cont√≠nua', content: 'Coletar feedback da equipe sobre o novo fluxo e propor melhorias e otimiza√ß√µes.' }
                ],
                deliverable: 'Processo de integra√ß√£o em produ√ß√£o e monitorado.'
            }
        ];

        const phaseDetailsContainer = document.getElementById('phase-details');
        let timelineChartInstance = null;
        let activePhaseIndex = 0;

        async function generateSummary(index) {
            const data = projectData[index];
            const summaryContainer = document.getElementById('summary-container');
            const summaryButton = document.getElementById('summary-button');
            const originalButtonText = summaryButton.innerHTML;

            summaryButton.disabled = true;
            summaryButton.innerHTML = `<svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> Gerando...`;
            summaryContainer.innerHTML = '';

            const prompt = `Resuma o seguinte plano de projeto de uma forma concisa e amig√°vel, focando nos pontos chave. As informa√ß√µes s√£o: Objetivo: "${data.objective}". Detalhes: ${data.details.map(d => `${d.title}: ${d.content}`).join(' ')}. Entrega: "${data.deliverable}".`;
            
            const payload = {
                contents: [{ parts: [{ text: prompt }] }],
                systemInstruction: {
                    parts: [{ text: "Voc√™ √© um especialista em gerenciamento de projetos. Forne√ßa um resumo objetivo e f√°cil de entender." }]
                },
                tools: [{ "google_search": {} }]
            };
            const apiKey = "";
            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;

            try {
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });

                if (!response.ok) {
                    throw new Error(`Erro na API: ${response.status} ${response.statusText}`);
                }

                const result = await response.json();
                const summary = result.candidates[0].content.parts[0].text;
                
                summaryContainer.innerHTML = `
                    <div class="bg-gray-100 p-6 rounded-lg mt-6 border-l-4 border-gray-400">
                        <h4 class="font-bold text-gray-800 text-lg mb-2">Resumo da Fase</h4>
                        <p class="text-gray-700">${summary}</p>
                    </div>
                `;
            } catch (error) {
                summaryContainer.innerHTML = `<div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mt-6 rounded" role="alert"><p>Erro ao gerar resumo. Por favor, tente novamente.</p></div>`;
            } finally {
                summaryButton.disabled = false;
                summaryButton.innerHTML = originalButtonText;
            }
        }

        function displayPhaseDetails(index) {
            activePhaseIndex = index;
            const data = projectData[index];
            phaseDetailsContainer.innerHTML = `
                <div class="bg-white rounded-xl shadow-lg p-8 animate-fade-in">
                    <h3 class="text-2xl sm:text-3xl font-bold text-purple-600">${data.phase}</h3>
                    <p class="text-gray-500 mt-1 mb-6 text-lg">Sprints: ${data.sprints[0]}-${data.sprints[1]}</p>
                    <p class="text-lg text-gray-700 mb-8">${data.objective}</p>
                    <div class="grid md:grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
                        ${data.details.map(detail => `
                            <div class="bg-gray-50 p-6 rounded-lg border border-gray-200">
                                <h4 class="font-semibold text-gray-800 text-lg mb-2">${detail.title}</h4>
                                <p class="text-gray-600">${detail.content}</p>
                            </div>
                        `).join('')}
                    </div>
                    <div class="bg-purple-50 border-l-4 border-purple-500 p-4 rounded-r-lg">
                        <h4 class="font-bold text-purple-800">Entrega Principal:</h4>
                        <p class="text-purple-700">${data.deliverable}</p>
                    </div>
                    <div class="mt-8 flex justify-end">
                        <button id="summary-button" onclick="generateSummary(${index})" class="bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-6 rounded-full transition-colors flex items-center justify-center space-x-2 shadow-lg">
                            <span>Gerar Resumo ‚ú®</span>
                        </button>
                    </div>
                    <div id="summary-container"></div>
                </div>
            `;
            
            updateChartHighlight();

            const keyframes = `
                @keyframes fade-in {
                    0% { opacity: 0; transform: translateY(20px); }
                    100% { opacity: 1; transform: translateY(0); }
                }
            `;
            const styleSheet = document.createElement("style");
            styleSheet.innerText = keyframes;
            document.head.appendChild(styleSheet);
            phaseDetailsContainer.querySelector('.animate-fade-in').style.animation = 'fade-in 0.5s ease-out forwards';
        }
        
        function updateChartHighlight() {
            if (timelineChartInstance) {
                timelineChartInstance.data.datasets[0].backgroundColor = projectData.map((_, i) => i === activePhaseIndex ? 'rgba(168, 85, 247, 1)' : 'rgba(209, 178, 255, 0.7)');
                timelineChartInstance.data.datasets[0].borderColor = projectData.map((_, i) => i === activePhaseIndex ? 'rgba(147, 51, 234, 1)' : 'rgba(168, 85, 247, 0.5)');
                timelineChartInstance.update();
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            const ctx = document.getElementById('timelineChart').getContext('2d');
            timelineChartInstance = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: projectData.map(p => p.phase),
                    datasets: [{
                        label: 'Sprints',
                        data: projectData.map(p => p.sprints),
                        backgroundColor: projectData.map((_, i) => i === activePhaseIndex ? 'rgba(168, 85, 247, 1)' : 'rgba(209, 178, 255, 0.7)'),
                        borderColor: projectData.map((_, i) => i === activePhaseIndex ? 'rgba(147, 51, 234, 1)' : 'rgba(168, 85, 247, 0.5)'),
                        borderWidth: 2,
                        borderSkipped: false,
                    }]
                },
                options: {
                    indexAxis: 'y',
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            beginAtZero: true,
                            grid: {
                                display: false
                            },
                            title: {
                                display: true,
                                text: 'Sprints do Projeto',
                                font: {
                                    size: 14,
                                    weight: 'bold'
                                }
                            }
                        },
                        y: {
                             grid: {
                                display: true,
                                color: '#e5e7eb'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const item = context.raw;
                                    return ` Sprints: ${item[0]} a ${item[1]}`;
                                }
                            }
                        }
                    },
                    onClick: (event, elements) => {
                        if (elements.length > 0) {
                            const index = elements[0].index;
                            displayPhaseDetails(index);
                        }
                    },
                    onHover: (event, chartElement) => {
                        event.native.target.style.cursor = chartElement[0] ? 'pointer' : 'default';
                    }
                }
            });

            displayPhaseDetails(0);

            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function (e) {
                    e.preventDefault();
                    document.querySelector(this.getAttribute('href')).scrollIntoView({
                        behavior: 'smooth'
                    });
                });
            });
        });
    </script>
</body>
</html>
